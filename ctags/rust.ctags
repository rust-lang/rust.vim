--langdef=Rust
--langmap=Rust:.rs
--regex-Rust=/^[ \t]*(#\[[^\]]\][ \t]*)*(pub[ \t]*(\([a-zA-Z0-9_]+[ \t]*\))?[ \t]+)?(extern[ \t]+)?("[^"]+"[ \t]+)?(unsafe[ \t]+)?fn[ \t]+([a-zA-Z0-9_]+)/\7/f,functions,function definitions/
--regex-Rust=/^[ \t]*(pub[ \t]*(\([a-zA-Z0-9_]+[ \t]*\))?[ \t]+)?type[ \t]+([a-zA-Z0-9_]+)/\3/T,types,type definitions/
--regex-Rust=/^[ \t]*(pub[ \t]*(\([a-zA-Z0-9_]+[ \t]*\))?[ \t]+)?enum[ \t]+([a-zA-Z0-9_]+)/\3/g,enum,enumeration names/
--regex-Rust=/^[ \t]*(pub[ \t]*(\([a-zA-Z0-9_]+[ \t]*\))?[ \t]+)?struct[ \t]+([a-zA-Z0-9_]+)/\3/s,structure names/
--regex-Rust=/^[ \t]*(pub[ \t]*(\([a-zA-Z0-9_]+[ \t]*\))?[ \t]+)?mod[ \t]+([a-zA-Z0-9_]+)/\3/m,modules,module names/
--regex-Rust=/^[ \t]*(pub[ \t]*(\([a-zA-Z0-9_]+[ \t]*\))?[ \t]+)?(static|const)[ \t]+([a-zA-Z0-9_]+)/\4/c,consts,static constants/
--regex-Rust=/^[ \t]*(pub[ \t]*(\([a-zA-Z0-9_]+[ \t]*\))?[ \t]+)?trait[ \t]+([a-zA-Z0-9_]+)/\3/t,traits,traits/
--regex-Rust=/^[ \t]*(pub[ \t]*(\([a-zA-Z0-9_]+[ \t]*\))?[ \t]+)?impl([ \t\n]*<[^>]*>)?[ \t]+(([a-zA-Z0-9_:]+)[ \t]*(<[^>]*>)?[ \t]+(for)[ \t]+)?([a-zA-Z0-9_]+)/\5 \7 \8/i,impls,trait implementations/
--regex-Rust=/^[ \t]*macro_rules![ \t]+([a-zA-Z0-9_]+)/\1/d,macros,macro definitions/
